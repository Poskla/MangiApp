<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>ABM Platos</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet"/>

    <style>
        body {
            background-color: #FFF9F0;
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: 'Trebuchet MS', sans-serif;
        }

        .logo {
            max-width: 30%;
            margin-bottom: 30px;
        }

        .acciones-btns button {
            margin-right: 5px;
        }

        .container {
            background-color: white;
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            text-align: center;
        }
    </style>
</head>

<body>
    <div class="container">
        <!-- Botón Volver arriba del logo -->
        <div class="text-start mb-3">
            <button id="btn-index" class="btn btn-warning rounded-pill py-2 px-4 border border-dark fw-bold shadow fs-5" onclick="window.location.href='index'">
                Volver al menú
            </button>
        </div>

          <!-- Título + botones Agregar Plato y Crear Categoría -->
        <div class="d-flex justify-content-between align-items-center my-4">
            <h1 class="fs-4 fw-bold mb-0">ABM PLATOS</h1>
            <div class="acciones-btns">
                <button id="btn-agregar" class="btn btn-warning rounded-pill py-3 px-4 border border-dark fw-bold shadow fs-4 mb-3" data-bs-toggle="modal" data-bs-target="#crearPlatoModal">
                    Agregar Plato
                </button>
               <div class="btn-group">
                    <button type="button" class="btn btn-success rounded-pill py-3 px-4 border border-dark fw-bold shadow fs-4 mb-3 dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        Gestionar Categorías
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#crearCategoriaModal">Crear Categoría</a></li>
                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#editarCategoriaModal">Editar Categoría</a></li>
                        <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#borrarCategoriaModal">Borrar Categoría</a></li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Tabla -->
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead class="table-warning">
                    <tr class="fs-5 fw-semibold">
                        <th>#</th>
                        <th>Categoría</th>
                        <th>Nombre</th>
                        <th>Precio</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <% platos.forEach((plato, index) => { %>
                        <tr id="plato-<%= plato.item_id %>">
                            <th scope="row"><%= index + 1 %></th>
                            <td><%= plato.categoria_nombre %></td>
                            <td><%= plato.denominacion %></td>
                            <td><%= plato.precio %></td>
                            <td>
                                <button type="button" class="btn btn-sm btn-primary me-2" data-bs-toggle="modal" 
                                    data-bs-target="#editarPlatoModal" 
                                    data-id="<%= plato.item_id %>"
                                    data-nombre="<%= plato.denominacion %>"
                                    data-precio="<%= plato.precio %>"
                                    data-descripcion="<%= plato.descripcion %>"
                                    data-categoria="<%= plato.cat_id %>">
                                    Editar
                                </button>
                                <button type="button" class="btn btn-sm btn-danger btn-borrar" 
                                    data-id="<%= plato.item_id %>">
                                    Borrar
                                </button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal para crear plato -->
    <div class="modal fade" id="crearPlatoModal" tabindex="-1" aria-labelledby="crearPlatoModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="crearPlatoModalLabel">Agregar Plato</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="formCrearPlato" method="post" action="/cargar">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="nomb" class="form-label">Nombre</label>
                            <input type="text" class="form-control" id="nomb" name="nomb" required>
                        </div>
                        <div class="mb-3">
                            <label for="precio" class="form-label">Precio</label>
                            <input type="number" class="form-control" id="precio" name="precio" required>
                        </div>
                        <div class="mb-3">
                            <label for="desc" class="form-label">Descripción</label>
                            <input type="text" class="form-control" id="desc" name="desc" required>
                        </div>
                        <div class="mb-3">
                            <label for="cat" class="form-label">Categoría</label>
                            <select class="form-select" name="cat" id="cat" required>
                                <option value="" selected disabled>Seleccione una categoría</option>
                                <% categorias.forEach(categoria => { %>
                                    <option value="<%= categoria.cat_id %>"><%= categoria.denominacion %></option>
                                <% }); %>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!-- Modal para crear categoría -->
    <div class="modal fade" id="crearCategoriaModal" tabindex="-1" aria-labelledby="crearCategoriaModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="crearCategoriaModalLabel">Crear Categoría</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="formCrearCategoria" method="post">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="nombreCategoria" class="form-label">Nombre de la Categoría</label>
                            <input type="text" class="form-control" id="nombreCategoria" name="nombreCategoria" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Crear</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal para editar plato -->
    <div class="modal fade" id="editarPlatoModal" tabindex="-1" aria-labelledby="editarPlatoModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editarPlatoModalLabel">Editar Plato</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="formEditarPlato" method="post" action="/actualizar-plato">
                    <div class="modal-body">
                        <input type="hidden" id="platoId" name="id">
                        <div class="mb-3">
                            <label for="nombreEdit" class="form-label">Nombre</label>
                            <input type="text" class="form-control" id="nombreEdit" name="nombre" required>
                        </div>
                        <div class="mb-3">
                            <label for="precioEdit" class="form-label">Precio</label>
                            <input type="number" class="form-control" id="precioEdit" name="precio" required>
                        </div>
                        <div class="mb-3">
                            <label for="descripcionEdit" class="form-label">Descripción</label>
                            <textarea class="form-control" id="descripcionEdit" name="descripcion"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="categoriaEdit" class="form-label">Categoría</label>
                            <select class="form-select" id="categoriaEdit" name="categoria" required>
                                <option value="" selected disabled>Seleccione una categoría</option>
                                <% categorias.forEach(categoria => { %>
                                    <option value="<%= categoria.cat_id %>"><%= categoria.denominacion %></option>
                                <% }); %>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar cambios</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Modal de confirmación para borrar -->
    <div class="modal fade" id="confirmarBorrarModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmar Borrado</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    ¿Estás seguro que deseas borrar este plato? Esta acción no se puede deshacer.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-danger" id="confirmarBorrado">Borrar</button>
                </div>
            </div>
        </div>
    </div>

        <!-- Modal para editar categoría -->
    <div class="modal fade" id="editarCategoriaModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Editar Categoría</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="formEditarCategoria">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Seleccionar Categoría</label>
                            <select class="form-select" id="selectEditarCategoria" required>
                                <option value="" selected disabled>Seleccione una categoría</option>
                                <% categorias.forEach(categoria => { %>
                                    <option value="<%= categoria.cat_id %>"><%= categoria.denominacion %></option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Nuevo Nombre</label>
                            <input type="text" class="form-control" id="nuevoNombreCategoria" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Modal para borrar categoría -->
    <div class="modal fade" id="borrarCategoriaModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Borrar Categoría</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="formBorrarCategoria">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Seleccionar Categoría</label>
                            <select class="form-select" id="selectBorrarCategoria" required>
                                <option value="" selected disabled>Seleccione una categoría</option>
                                <% categorias.forEach(categoria => { %>
                                    <option value="<%= categoria.cat_id %>"><%= categoria.denominacion %></option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="alert alert-warning">
                            ¡Advertencia! Al borrar una categoría, todos los platos asociados a ella quedarán sin categoría.
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-danger">Borrar</button>
                    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-j1CDi7MgGQ12Z7Qab0qlWQ/Qqz24Gc6BM0thvEMVjHnfYGF0rmFCozFSxQBxwHKO"
        crossorigin="anonymous"></script>

    <script>
        // Función para agregar una nueva fila a la tabla
        function agregarFilaAPlato(plato, index) {
            const tbody = document.querySelector('table tbody');

            // Clonamos la primera fila para mantener el formato
            const filaOriginal = tbody.querySelector('tr:first-child');
            const nuevaFila = filaOriginal.cloneNode(true);

            // Actualizamos los datos
            nuevaFila.id = `plato-${plato.item_id}`;
            nuevaFila.querySelector('th[scope="row"]').textContent = index + 1;
            nuevaFila.querySelector('td:nth-child(2)').textContent = plato.categoria_nombre;
            nuevaFila.querySelector('td:nth-child(3)').textContent = plato.denominacion;
            nuevaFila.querySelector('td:nth-child(4)').textContent = plato.precio;

            // Actualizamos los botones
            const btnEditar = nuevaFila.querySelector('.btn-primary');
            btnEditar.setAttribute('data-id', plato.item_id);
            btnEditar.setAttribute('data-nombre', plato.denominacion);
            btnEditar.setAttribute('data-precio', plato.precio);
            btnEditar.setAttribute('data-descripcion', plato.descripcion);
            btnEditar.setAttribute('data-categoria', plato.cat_id);

            const btnBorrar = nuevaFila.querySelector('.btn-danger');
            btnBorrar.setAttribute('data-id', plato.item_id);

            tbody.appendChild(nuevaFila);
        }
        // Manejar el envío del formulario de creación de plato
        document.getElementById('formCrearPlato').addEventListener('submit', function (e) {
            e.preventDefault();

            const formData = new URLSearchParams(new FormData(this));

            fetch('/cargar', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Actualizar la interfaz
                        this.reset(); // Limpiar el formulario
                        agregarFilaAPlato(data.plato); // Tu función para agregar filas
                    }
                })
                .catch(error => console.error('Error:', error));
        });


         // Manejar el envío del formulario de creación de categoria
        document.getElementById('formCrearCategoria').addEventListener('submit', function (e) {
            e.preventDefault();
            const nombreCategoria = document.getElementById('nombreCategoria').value;
            fetch('/crear-categoria', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ nombre: nombreCategoria })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Cerrar el modal
                        const modal = bootstrap.Modal.getInstance(document.getElementById('crearCategoriaModal'));
                        modal.hide();
                        // Limpiar el formulario
                        this.reset();
                        // Aquí puedes agregar la lógica para actualizar la lista de categorías en la interfaz
                        // Por ejemplo, podrías volver a cargar las categorías desde el servidor
                    }
                })
                .catch(error => console.error('Error:', error));
        });

        // Script para cargar datos en el modal cuando se hace clic en editar
        document.addEventListener('DOMContentLoaded', function () {
            const modal = document.getElementById('editarPlatoModal');
            modal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const id = button.getAttribute('data-id');
                const nombre = button.getAttribute('data-nombre');
                const precio = button.getAttribute('data-precio');
                const descripcion = button.getAttribute('data-descripcion');
                const categoria = button.getAttribute('data-categoria');

                document.getElementById('platoId').value = id;
                document.getElementById('nombreEdit').value = nombre;
                document.getElementById('precioEdit').value = precio;
                document.getElementById('descripcionEdit').value = descripcion || '';
                document.getElementById('categoriaEdit').value = categoria;
            });

            // Opcional: Actualizar la vista sin recargar la página
            document.getElementById('formEditarPlato').addEventListener('submit', function (e) {
                e.preventDefault();

                const formData = new URLSearchParams(new FormData(this));

                fetch(this.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload(); // Recarga la página para ver cambios
                        }
                    })
                    .catch(error => console.error('Error:', error));
            });
        });
        document.addEventListener('DOMContentLoaded', function () {
            let platoABorrar = null;
            const confirmarBorrarModal = new bootstrap.Modal(document.getElementById('confirmarBorrarModal'));

            // Configurar botones de borrar
            document.querySelectorAll('.btn-borrar').forEach(btn => {
                btn.addEventListener('click', function () {
                    platoABorrar = this.getAttribute('data-id');
                    confirmarBorrarModal.show();
                });
            });

            // Confirmar borrado
            document.getElementById('confirmarBorrado').addEventListener('click', function () {
                if (platoABorrar) {
                    fetch(`/borrar-plato/${platoABorrar}`, {
                        method: 'DELETE'
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Eliminar la fila de la tabla
                                document.getElementById(`plato-${platoABorrar}`).remove();
                                confirmarBorrarModal.hide();
                            }
                        })
                        .catch(error => console.error('Error:', error));
                }
            });
        });
    </script>
</body>

</html>